{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\FoodAppTimes\\\\src\\\\component\\\\MenuItem\\\\AddMenuItem.component.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Button, Dropdown } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './AddMenuItem.css';\nimport axios from \"axios\";\n\nfunction AddMenuItem(props) {\n  const {\n    0: catval,\n    1: setcatval\n  } = useState([]);\n  const {\n    0: idval,\n    1: setidval\n  } = useState();\n  const {\n    0: imgidval,\n    1: setimgidval\n  } = useState();\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    title: '',\n    category: '',\n    price: '',\n    imgURL: ''\n  });\n\n  function addItem(event) {\n    event.preventDefault();\n    alert(\"Submitted!\" + \" title: \" + formValues.title + \" category: \" + formValues.category + \" price: \" + formValues.price + formValues.imgURL);\n    const postdata = {\n      name: formValues.title,\n      actualPrice: Number(formValues.price),\n      sellingPrice: Number(formValues.price),\n      itemType: \"VEG\",\n      categoryId: idval,\n      imageId: 3\n    };\n    console.log(postdata);\n    axios.post(\"api/staff/item\", postdata).then(res => {\n      console.log(res);\n    }).catch(console.error());\n  }\n\n  function handleInputChange(event) {\n    setFormValues(prevState => {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        [event.target.name]: event.target.value\n      });\n    });\n  }\n\n  useEffect(() => {\n    axios.get(\"api/staff/category\").then(res => {\n      setcatval(res.data);\n      console.log(res.data);\n    }).catch(console.error());\n  }, []);\n\n  function handleDropdownChange(event) {\n    setidval(event);\n    setFormValues(prev => {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        category: event\n      });\n    });\n  }\n\n  function handleFileChange(event) {\n    setFormValues(prevState => {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        [event.target.name]: event.target.files[0].name\n      });\n    });\n  } // Image upload\n\n\n  const {\n    0: formImage,\n    1: setFormImage\n  } = useState({\n    selectedImage: null\n  });\n\n  function imageInputHandler(event) {\n    setFormImage({\n      selectedImage: event.target.files[0]\n    });\n  }\n\n  function onImageUpload() {\n    const formData = new FormData();\n    formData.append(\"itemImage\", formImage.selectedImage);\n    axios.post(\"https://food-app-timesinternet.herokuapp.com/api/staff/item/image\", formData).then(resp => setimgidval(resp.data.id)).catch(err => console.log(err));\n  }\n\n  ;\n  return __jsx(\"div\", {\n    className: \"menuitemform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"menuitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    onSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    className: \"menuitemtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Add Menu Item\"), __jsx(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Item Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Item Name...\",\n    name: \"title\",\n    onChange: handleInputChange,\n    value: formValues.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  })), __jsx(Form.Group, {\n    controlId: \"formFile\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, \"Default file input example\"), __jsx(Form.Control, {\n    onChange: imageInputHandler,\n    type: \"file\",\n    accept: \"image/png, image/gif, image/jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    onClick: onImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Upload\")), __jsx(Dropdown, {\n    onSelect: handleDropdownChange,\n    style: {\n      marginBottom: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, __jsx(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"Category\"), __jsx(Dropdown.Menu, {\n    className: \"dropdown-menu \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, catval.map((val, index) => {\n    return __jsx(Dropdown.Item, {\n      eventKey: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 48\n      }\n    }, val.name);\n  }))), __jsx(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \"Item Price\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Price...\",\n    name: \"price\",\n    onChange: handleInputChange,\n    value: formValues.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Add Item\")), __jsx(\"img\", {\n    src: formValues.imgURL,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default AddMenuItem;","map":{"version":3,"sources":["D:/Github/FoodAppTimes/src/component/MenuItem/AddMenuItem.component.js"],"names":["useState","useEffect","Form","Button","Dropdown","axios","AddMenuItem","props","catval","setcatval","idval","setidval","imgidval","setimgidval","formValues","setFormValues","title","category","price","imgURL","addItem","event","preventDefault","alert","postdata","name","actualPrice","Number","sellingPrice","itemType","categoryId","imageId","console","log","post","then","res","catch","error","handleInputChange","prevState","target","value","get","data","handleDropdownChange","prev","handleFileChange","files","formImage","setFormImage","selectedImage","imageInputHandler","onImageUpload","formData","FormData","append","resp","id","err","width","margin","marginBottom","map","val","index","float"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { Form, Button, Dropdown } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddMenuItem.css';\r\nimport axios from \"axios\";\r\n\r\nfunction AddMenuItem(props) {\r\n    const [catval, setcatval] = useState([]);\r\n    const [idval, setidval] = useState();\r\n    const [imgidval, setimgidval] = useState();\r\n    const [formValues, setFormValues] = useState({\r\n        title: '',\r\n        category: '',\r\n        price: '',\r\n        imgURL: '',\r\n\r\n    })\r\n\r\n    function addItem(event) {\r\n        event.preventDefault();\r\n        alert(\"Submitted!\" + \" title: \" + formValues.title + \" category: \" + formValues.category + \" price: \" + formValues.price + formValues.imgURL);\r\n        const postdata = {\r\n            name: formValues.title,\r\n            actualPrice: Number(formValues.price),\r\n            sellingPrice: Number(formValues.price),\r\n            itemType: \"VEG\",\r\n            categoryId: idval,\r\n            imageId: 3\r\n        }\r\n        console.log(postdata)\r\n        axios.post(\"api/staff/item\", postdata).then((res) => {\r\n            console.log(res);\r\n        })\r\n            .catch(console.error());\r\n\r\n\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        setFormValues((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        axios.get(\"api/staff/category\").then((res) => {\r\n            setcatval(res.data)\r\n            console.log(res.data)\r\n        })\r\n            .catch(console.error());\r\n    }, [])\r\n\r\n\r\n    function handleDropdownChange(event) {\r\n        setidval(event)\r\n        setFormValues((prev) => {\r\n            return {\r\n                ...prev,\r\n                category: event\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    function handleFileChange(event) {\r\n        setFormValues((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [event.target.name]: event.target.files[0].name\r\n            }\r\n        })\r\n    }\r\n    // Image upload\r\n\r\n    const [formImage, setFormImage] = useState({\r\n        selectedImage: null\r\n    })\r\n\r\n    function imageInputHandler(event) {\r\n        setFormImage({ selectedImage: event.target.files[0] });\r\n    }\r\n    \r\n    function onImageUpload() {\r\n        const formData = new FormData();\r\n        formData.append(\"itemImage\", formImage.selectedImage);\r\n        axios.post(\"https://food-app-timesinternet.herokuapp.com/api/staff/item/image\", formData)\r\n            .then(resp => setimgidval(resp.data.id))\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    return (\r\n        <div className=\"menuitemform\">\r\n            <div className=\"menuitem\">\r\n                <div style={{ width: \"400px\", margin: \"auto\" }}>\r\n                    <Form onSubmit={addItem}>\r\n                        <h3 className=\"menuitemtitle\">Add Menu Item</h3>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"title\">\r\n                            <Form.Label>Item Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Item Name...\" name=\"title\" onChange={handleInputChange} value={formValues.title} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label>Default file input example</Form.Label>\r\n                            <Form.Control onChange={imageInputHandler} type=\"file\" accept=\"image/png, image/gif, image/jpeg\" />\r\n                            <Button onClick={onImageUpload}>Upload</Button>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Dropdown onSelect={handleDropdownChange} style={{ marginBottom: \"16px\" }} >\r\n                            <Dropdown.Toggle variant=\"success\" id=\"category\" >\r\n                                Category\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu className=\"dropdown-menu \">\r\n                                {\r\n                                    catval.map((val, index) => {\r\n                                        return <Dropdown.Item eventKey={val.id}>{val.name}</Dropdown.Item>\r\n                                    })\r\n                                }\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"price\">\r\n                            <Form.Label>Item Price</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Price...\" name=\"price\" onChange={handleInputChange} value={formValues.price} />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" style={{ float: 'right' }} >\r\n                            Add Item\r\n                        </Button>\r\n                    </Form>\r\n\r\n                    <img src={formValues.imgURL} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMenuItem"]},"metadata":{},"sourceType":"module"}