{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\FoodAppTimes\\\\src\\\\component\\\\Pincode\\\\AddPincode.component.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport \"./AddPincode.css\";\n\nfunction AddPincode() {\n  const {\n    0: showAlert,\n    1: setShowAlert\n  } = useState(false);\n  const {\n    0: formValues,\n    1: setformValues\n  } = useState({\n    pincodeString: '',\n    pincodes: []\n  });\n  useEffect(() => {\n    axios.get(\"https://food-app-timesinternet.herokuapp.com/api/staff/pincode\").then(response => {\n      const pincodeArray = response.data.map(pincodeElement => {\n        return pincodeElement.pincode.toString();\n      });\n      let pincodeArrayString = \"\";\n      pincodeArray.forEach((item, index) => {\n        if (index === pincodeArray.length - 1) {\n          pincodeArrayString += \" \" + item;\n        } else {\n          pincodeArrayString += \" \" + item + \",\";\n        }\n      });\n      setformValues(prevState => {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          pincodeString: pincodeArrayString\n        });\n      });\n    });\n  }, []);\n\n  function addPincodes(event) {\n    event.preventDefault();\n    axios.post(\"https://food-app-timesinternet.herokuapp.com/api/staff/pincode\", formValues.pincodes).then(resp => {\n      console.log(resp);\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n      }, 1500);\n    });\n  }\n\n  function handleInputChange(event) {\n    event.preventDefault();\n    let pincodes = event.target.value.split(\",\").map(function (item) {\n      return {\n        pincode: item.trim()\n      };\n    });\n    setformValues({\n      pincodeString: event.target.value,\n      pincodes: pincodes\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"pincodeform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"pincode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, __jsx(Form, {\n    onSubmit: addPincodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, __jsx(\"h3\", {\n    className: \"pincodetitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Add Pincodes\"), showAlert && __jsx(Alert, {\n    variant: \"info\",\n    onClose: () => setShowAlert(false),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Staff Added!\"), __jsx(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"Pincodes\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter comma separated pincode values\",\n    name: \"pincodes\",\n    onChange: handleInputChange,\n    value: formValues.pincodeString,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  })), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"Update\"))))));\n}\n\nexport default AddPincode;","map":{"version":3,"sources":["D:/Github/FoodAppTimes/src/component/Pincode/AddPincode.component.js"],"names":["useEffect","useState","Form","Button","Alert","axios","AddPincode","showAlert","setShowAlert","formValues","setformValues","pincodeString","pincodes","get","then","response","pincodeArray","data","map","pincodeElement","pincode","toString","pincodeArrayString","forEach","item","index","length","prevState","addPincodes","event","preventDefault","post","resp","console","log","setTimeout","handleInputChange","target","value","split","trim","width","margin","float"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport \"./AddPincode.css\"\r\n\r\nfunction AddPincode() {\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n\r\n    const [formValues, setformValues] = useState({\r\n        pincodeString: '',\r\n        pincodes: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://food-app-timesinternet.herokuapp.com/api/staff/pincode\")\r\n            .then(response => {\r\n                const pincodeArray = response.data.map(pincodeElement => {\r\n                    return pincodeElement.pincode.toString()\r\n                });\r\n                let pincodeArrayString = \"\"\r\n                pincodeArray.forEach((item, index) => {\r\n                    if (index === pincodeArray.length - 1) {\r\n                        pincodeArrayString += \" \" + item\r\n                    } else {\r\n                        pincodeArrayString += \" \" + item + \",\"\r\n                    }\r\n                })\r\n                setformValues(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        pincodeString: pincodeArrayString\r\n                    }\r\n                })\r\n            })\r\n    }, [])\r\n\r\n\r\n    function addPincodes(event) {\r\n        event.preventDefault()\r\n        axios.post(\"https://food-app-timesinternet.herokuapp.com/api/staff/pincode\", formValues.pincodes)\r\n            .then((resp) => {\r\n                console.log(resp);\r\n                setShowAlert(true)\r\n                setTimeout(() => {\r\n                    setShowAlert(false)\r\n                }, 1500);\r\n            })\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        event.preventDefault();\r\n        let pincodes = event.target.value.split(\",\").map(function (item) {\r\n            return { pincode: item.trim() }\r\n        });\r\n        setformValues({\r\n            pincodeString: event.target.value,\r\n            pincodes: pincodes\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"pincodeform\">\r\n                <div className=\"pincode\">\r\n                    <div style={{ width: \"400px\", margin: \"auto\" }}>\r\n                        <Form onSubmit={addPincodes}>\r\n                            <h3 className=\"pincodetitle\">Add Pincodes</h3>\r\n                            {showAlert &&\r\n                                <Alert variant=\"info\" onClose={() => setShowAlert(false)} dismissible>\r\n                                    Staff Added!\r\n                                </Alert>\r\n                            }\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Pincodes</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter comma separated pincode values\" name=\"pincodes\" onChange={handleInputChange} value={formValues.pincodeString} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" style={{ float: 'right' }} >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPincode;"]},"metadata":{},"sourceType":"module"}